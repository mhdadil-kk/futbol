<%- include('adheader') %>

    <section class="content-main">
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Coupon Management</h2>
                <p>Manage coupons and add new ones</p>
            </div>
        </div>

        <div class="row">
            <!-- Add Coupon Form Section -->
            <div class="col-md-4 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Add New Coupon</h5>
                        <form id="addCouponForm" method="post" novalidate>
                            <!-- Form Fields -->
                            <div class="mb-3">
                                <label for="name" class="form-label">Name</label>
                                <input type="text" class="form-control" id="name" name="name" required>
                                <small id="nameError" class="text-danger"></small>
                            </div>
                            <div class="mb-3">
                                <label for="coupon_code" class="form-label">Coupon Code</label>
                                <input type="text" class="form-control" id="coupon_code" name="couponCode" required>
                                <small id="codeError" class="text-danger"></small>
                            </div>
                            <div class="mb-3">
                                <label for="percentage" class="form-label">Discount Percentage</label>
                                <input type="number" class="form-control" id="percentage" name="percentage" min="1"
                                    max="100" required>
                                <small id="percentageError" class="text-danger"></small>
                            </div>
                            <div class="mb-3">
                                <label for="minimumAmount" class="form-label">Minimum Amount</label>
                                <input type="number" class="form-control" id="minimumAmount" name="minimumAmount"
                                    min="1" required>
                                <small id="minimumAmountError" class="text-danger"></small>
                            </div>
                            <div class="mb-3">
                                <label for="maxredeemAmount" class="form-label">Maximum Redeem Amount</label>
                                <input type="number" class="form-control" id="maxredeemAmount" name="maxredeemAmount"
                                    min="1" required>
                                <small id="maxredeemAmountError" class="text-danger"></small>
                            </div>
                            <div class="mb-3">
                                <label for="expiryDate" class="form-label">Expiry Date</label>
                                <input type="date" class="form-control" id="expiryDate" name="expires" required>
                                <small id="expiryDateError" class="text-danger"></small>
                            </div>
                            <div class="mb-3">
                                <label for="status" class="form-label">Status</label>
                                <select class="form-select" id="status" name="status" required>
                                    <option value="true">Active</option>
                                    <option value="false">Inactive</option>
                                </select>
                            </div>
                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary">Add Coupon</button>
                            </div>
                        </form>
                        <div id="successMessage" class="text-success mt-2"></div>
                    </div>
                </div>
            </div>

            <!-- Coupon List Section -->
            <div class="col-md-8 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">List of Coupons</h5>
                        <% if (coupons.length===0) { %>
                            <p class="text-info text-center">No coupons found.</p>
                            <% } else { %>
                                <table class="table" id="couponTable">
                                    <thead>
                                        <tr>
                                            <th scope="col">#</th>
                                            <th scope="col">Name</th>
                                            <th scope="col">Coupon Code</th>
                                            <th scope="col">Discount Percentage</th>
                                            <th scope="col">Minimum Amount</th>
                                            <th scope="col">Maximum Redeem Amount</th>
                                            <th scope="col">Expiry Date</th>
                                            <th scope="col">Status</th>
                                            <th scope="col">Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% coupons.forEach((coupon, index)=> { %>
                                            <tr>
                                                <th scope="row">
                                                    <%= index + 1 %>
                                                </th>
                                                <td>
                                                    <%= coupon.name %>
                                                </td>
                                                <td>
                                                    <%= coupon.couponCode %>
                                                </td>
                                                <td>
                                                    <%= coupon.percentage %>
                                                </td>
                                                <td>
                                                    <%= coupon.minimumAmount %>
                                                </td>
                                                <td>
                                                    <%= coupon.maxredeemAmount %>
                                                </td>
                                                <td>
                                                    <%= new Date(coupon.expires).toLocaleDateString() %>
                                                </td>
                                                <td>
                                                    <span
                                                        class="<%= coupon.status ? 'badge bg-success' : 'badge bg-danger' %>">
                                                        <%= coupon.status ? 'Active' : 'Inactive' %>
                                                    </span>
                                                </td>
                                                <td>
                                                    <div class="dropdown">
                                                        <button class="btn btn-sm btn-light" type="button"
                                                            data-bs-toggle="dropdown" aria-expanded="false">
                                                            &#x22EE;
                                                        </button>
                                                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                            <li>
                                                                <button class="dropdown-item text-info"
                                                                    onclick="toggleCouponStatus('<%= coupon._id %>', '<%= coupon.status %>')">
                                                                    <%= coupon.status ? 'Deactivate' : 'Activate' %>
                                                                </button>
                                                            </li>
                                                            <li>
                                                                <button class="dropdown-item text-danger"
                                                                    onclick="deleteCoupon('<%= coupon._id %>', this)">
                                                                    Delete
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </td>
                                            </tr>
                                            <% }) %>
                                    </tbody>
                                </table>
                                <% } %>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <%- include('adfooter') %>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                // Client-side validation and AJAX submission for Add Coupon
                document.getElementById('addCouponForm').addEventListener('submit', function (e) {
                    e.preventDefault();
                    const formData = new FormData(this);
                    const data = Object.fromEntries(formData.entries());

                    // Clear error messages before submission
                    clearErrorMessages();

                    // Client-side validation
                    const isValid = validateForm(data);
                    if (!isValid) {
                        return; // Stop submission if validation fails
                    }

                    // AJAX request to add coupon
                    fetch('/admin/addcoupon', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data),
                    })
                        .then(response => response.json())
                        .then(response => {
                            if (response.success) {
                                // Add new coupon row to the table
                                addCouponRow(response.data);
                                Swal.fire('Success', 'Coupon added successfully!', 'success');
                                this.reset(); // Reset the form after success
                            } else {
                                // Show server-side validation error using SweetAlert
                                Swal.fire('Error', response.error, 'error');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            Swal.fire('Error', 'An unexpected error occurred!', 'error');
                        });
                });

                function validateForm(data) {
                    let valid = true;

                    // Validate name: non-empty, should not start with space, and length between 2 and 50
                    if (!data.name || data.name.trim() === '' || data.name[0] === ' ' || data.name.length < 2 || data.name.length > 50) {
                        document.getElementById('nameError').textContent = 'Name is required, should be valid and between 2 and 50 characters long';
                        valid = false;
                    } else {
                        document.getElementById('nameError').textContent = ''; // Clear the error if valid
                    }

                    // Validate coupon code: non-empty, alphanumeric, no spaces-only
                    const codePattern = /^[a-zA-Z0-9]+$/;
                    if (!data.couponCode || !codePattern.test(data.couponCode)) {
                        document.getElementById('codeError').textContent = 'Coupon code is required and should be alphanumeric';
                        valid = false;
                    } else {
                        document.getElementById('codeError').textContent = ''; // Clear the error if valid
                    }

                    // Validate percentage: must be a number between 1 and 100
                    if (!data.percentage || isNaN(data.percentage) || data.percentage < 1 || data.percentage > 100) {
                        document.getElementById('percentageError').textContent = 'Percentage must be a number between 1 and 100';
                        valid = false;
                    } else {
                        document.getElementById('percentageError').textContent = ''; // Clear the error if valid
                    }

                    // Validate minimum amount: must be a number greater than 0
                    if (!data.minimumAmount || isNaN(data.minimumAmount) || data.minimumAmount < 1) {
                        document.getElementById('minimumAmountError').textContent = 'Minimum amount must be greater than 0';
                        valid = false;
                    } else {
                        document.getElementById('minimumAmountError').textContent = ''; // Clear the error if valid
                    }

                    // Validate max redeem amount: must be a number greater than 0
                    if (!data.maxredeemAmount || isNaN(data.maxredeemAmount) || data.maxredeemAmount < 1) {
                        document.getElementById('maxredeemAmountError').textContent = 'Maximum redeem amount must be greater than 0';
                        valid = false;
                    } else {
                        document.getElementById('maxredeemAmountError').textContent = ''; // Clear the error if valid
                    }

                    // Validate expiry date: cannot be in the past
                    const today = new Date();
                    const expiryDate = new Date(data.expires);
                    if (!data.expires || expiryDate < today) {
                        document.getElementById('expiryDateError').textContent = 'Expiry date must be in the future';
                        valid = false;
                    } else {
                        document.getElementById('expiryDateError').textContent = ''; // Clear the error if valid
                    }

                    return valid;
                }

                function clearErrorMessages() {
                    document.getElementById('nameError').textContent = '';
                    document.getElementById('codeError').textContent = '';
                    document.getElementById('percentageError').textContent = '';
                    document.getElementById('minimumAmountError').textContent = '';
                    document.getElementById('maxredeemAmountError').textContent = '';
                    document.getElementById('expiryDateError').textContent = '';
                }

                function addCouponRow(coupon) {
                    const tableBody = document.querySelector('#couponTable tbody');
                    const row = `
            <tr>
                <th scope="row">${tableBody.children.length + 1}</th>
                <td>${coupon.name}</td>
                <td>${coupon.couponCode}</td>
                <td>${coupon.percentage}</td>
                <td>${coupon.minimumAmount}</td>
                <td>${coupon.maxredeemAmount}</td>
                <td>${new Date(coupon.expires).toLocaleDateString()}</td>
                <td><span class="badge ${coupon.status ? 'bg-success' : 'bg-danger'}">${coupon.status ? 'Active' : 'Inactive'}</span></td>
                <td>
                    <div class="dropdown">
                        <button class="btn btn-sm btn-light" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                            &#x22EE;
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <li>
                                <button class="dropdown-item text-info" onclick="toggleCouponStatus('${coupon._id}', ${coupon.status})">
                                    ${coupon.status ? 'Deactivate' : 'Activate'}
                                </button>
                            </li>
                            <li>
                                <button class="dropdown-item text-danger" onclick="deleteCoupon('${coupon._id}', this)">Delete</button>
                            </li>
                        </ul>
                    </div>
                </td>
            </tr>
        `;
                    tableBody.insertAdjacentHTML('beforeend', row);
                }




            });



            // Function to delete a coupon
            function deleteCoupon(couponId, button) {
                // Show SweetAlert confirmation dialog
                Swal.fire({
                    title: 'Are you sure?',
                    text: "Do you really want to delete this coupon?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'No, cancel!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Proceed with deletion if confirmed
                        fetch(`/admin/deletecoupon/${couponId}`, {
                            headers: { 'Content-Type': 'application/json' },
                            method: 'POST' // Use POST method for deletion
                        })
                            .then(response => response.json())
                            .then(response => {
                                if (response.success) {
                                    // Show success message
                                    Swal.fire('Deleted!', 'Coupon deleted successfully!', 'success')
                                        .then(() => {
                                            // Reload the page after the user closes the alert
                                            window.location.reload(); // Use location.reload() to refresh the page
                                        });
                                } else {
                                    // Show error message
                                    Swal.fire('Error', response.error, 'error');
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                Swal.fire('Error', 'An unexpected error occurred!', 'error');
                            });
                    }
                });
            }



            // Function to toggle coupon status
            function toggleCouponStatus(couponId, currentStatus) {
                // Show SweetAlert confirmation dialog
                Swal.fire({
                    title: 'Are you sure?',
                    text: "Do you really want to change the coupon status?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, change it!',
                    cancelButtonText: 'No, cancel!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        const newStatus = !currentStatus; // Toggle status
                        fetch(`/admin/togglecouponstatus/${couponId}`, {
                            method: 'POST', // Change to PUT since it’s an update operation
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ status: newStatus }),
                        })
                            .then(response => response.json())
                            .then(response => {
                                if (response.success) {
                                    // Show success message
                                    Swal.fire('Success', 'Coupon status updated!', 'success').then(() => {
                                        window.location.reload(); 
                                    });
                                } else {
                                    // Show error message
                                    Swal.fire('Error', response.error, 'error');
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                Swal.fire('Error', 'An unexpected error occurred!', 'error');
                            });
                    }
                });
            }

        </script>

        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>